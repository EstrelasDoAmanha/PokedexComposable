name: Android Debug Pipeline

on:
  pull_request:
    branches : [main, develop]
  push :
    branches : [main, develop]

jobs :
  build:
    runs-on: macOS-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution : 'temurin'
          java-version: 17
          cache: gradle

      - name: Grant gradlew execution permission
        run: chmod +x ./gradlew

      - name: Gradle build
        run: ./gradlew assembleDebug --stacktrace

      - name: Check build status
        run: |
          if [ $? -eq 0 ]; then
            echo "Build successful."
          else
            echo "Build failed."
            exit 1
          fi

  test:
    needs: build
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: gradle

      - name: Grant gradlew execution permission
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --stacktrace

      - name: Check unit tests status
        run: |
          if [ $? -eq 0 ]; then
            echo "Unit tests passed."
          else
            echo "Unit tests failed."
            exit 1
          fi 

  kt-lint:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: gradle

      - name: Grant gradlew execution permission
        run: chmod +x ./gradlew

      - name: Run ktlintFormat
        run: ./gradlew ktlintFormat --stacktrace

      - name: Check unit tests status
        run: |
          if [ $? -eq 0 ]; then
            echo "KtlintFormat passed."
          else
            echo "KtlintFormat failed."
            exit 1
          fi

  danger:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Print Work Directory
        run: pwd

      - uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      - run: bundle install

      - name: Copy Dangerfile to root
        run: cp scripts/danger/Dangerfile ./

      - name: Run Danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bundle exec danger

      - name: Delete copied Dangerfile
        run: rm -rf ./Dangerfile

  dokka:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: gradle

      - name: Print Work Directory
        run: pwd

      - uses: actions/checkout@v4

      - name: Run Dokka
        run: |
          VERSION=$(git tag --sort=committerdate | tail -1)
          echo Generating API documentation for version $VERSION
          ./gradlew -Pversion=$VERSION dokkaHtml


#      - name: Install Bundle
#        run: ls && bundle install

#  danger:
#    permissions: write-all
#    runs-on: ubuntu-latest
#    needs: ruby
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Print Work Directory
#        run: pwd
#
#      - name: Run Danger
#        uses: danger/danger@1.3.0
#        with:
#          dangerfile: scripts/danger/Dangerfile.df.kts
#        run: danger-kotlin ci --failOnErrors --no-publish-check
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: bundle exec danger
#      - name: Upload built artifact
#        uses: actions/upload-artifact@v3.1.3
#        with:
#          name: debug.apk
#          path: app/build/outputs/apk/debug/app-debug.apk